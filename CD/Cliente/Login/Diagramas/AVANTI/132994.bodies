class ColladaCollection
!!!143490.java!!!	ColladaCollection()
		
!!!143618.java!!!	ColladaCollection(inout collection : ArrayList<ColladaObject>)
		int size = collection.size();
	    //ByteBuffer vbb = ByteBuffer.allocateDirect(vertices.)
		int verticesLength = 0;
		int indicesLength = 0;
	    //calcular los tamaños de los buffers.
	    for (int i= 0; i<size; i++){
	    	float[] vertices = collection.get(i).getVertices();
	    	byte[] indices = collection.get(i).getIndices();
	    	if (vertices!=null){//comparar con null.
	    		verticesLength = verticesLength + vertices.length;
		    }
	    	if (indices!=null){//comparar con null.
	    		indicesLength = indicesLength + indices.length;
	    	}
	    }
	    
	    ByteBuffer vbb = ByteBuffer.allocate(verticesLength*4);
	    vbb.order(ByteOrder.nativeOrder());
	    mVertexBuffer = vbb.asFloatBuffer();
	    mIndexBuffer = ByteBuffer.allocate(indicesLength);
	    
		for (int i= 0; i<size; i++){
			ColladaObject obj = (ColladaObject)collection.get(i);
			float[] vertices = obj.getVertices();
			byte[] indices = obj.getIndices();
			
			if (vertices!=null){
				mVertexBuffer.put(vertices);
				mVertexBuffer.position(0);
			}
			if (indices!=null){
				mIndexBuffer.put(indices);
		        mIndexBuffer.position(0);
			}
		}
!!!143746.java!!!	draw(inout gl : GL10) : void
		//probar:
		
		gl.glVertexPointer(3, GL10.GL_FLOAT, 0, mVertexBuffer);
        gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
        gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
    	gl.glColor4f(0, 0, 1.0f, 1.0f);
    	//gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 3);
    	gl.glDrawElements(GL10.GL_TRIANGLES, mIndexBuffer.limit(), GL10.GL_UNSIGNED_BYTE, mIndexBuffer);
