class CubeRenderer
!!!146690.java!!!	CubeRenderer(inout useTranslucentBackground : boolean)
        mTranslucentBackground = useTranslucentBackground;
        
        mAngleX = 0;
        mAngleY = 0;
        previousMAngleX = 200;
        previousMAngleY = -90;
        mCube = new Cube();
!!!146818.java!!!	onDrawFrame(inout gl : GL10) : void
        /*
         * Usually, the first thing one might want to do is to clear
         * the screen. The most efficient way of doing this is to use
         * glClear().
         */
    	
    	gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);


        /*
         * Now we're ready to draw some 3D objects
         */

        gl.glMatrixMode(GL10.GL_MODELVIEW);
        gl.glLoadIdentity();
        gl.glTranslatef(0, 0, -6.0f);
        gl.glLoadIdentity();
        GLU.gluLookAt(gl, 0,0,0, 0, 0, -6.0f, 0, 0, -1);
       // gl.glRotatef(mAngle,        0, 1, 0);
      
        gl.glTranslatef(mAngleX,0,0);
       // gl.glTranslatef(0,mAngleY,0);

        gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
        gl.glEnableClientState(GL10.GL_COLOR_ARRAY);
        //gl.glTranslatef(360-mAngle, 0, 0);
        mCube.draw(gl);
        
       // gl.glRotatef(mAngle*2.0f, 0, 1, 1);
     

        //mCube.draw(gl);
        
  
        
!!!146946.java!!!	onSurfaceChanged(inout gl : GL10, in width : int, in height : int) : void
         gl.glViewport(0, 0, width, height);

         /*
          * Set our projection matrix. This doesn't have to be done
          * each time we draw, but usually a new projection needs to
          * be set when the viewport is resized.
          */

         float ratio = (float) width / height;
         gl.glMatrixMode(GL10.GL_PROJECTION);
         gl.glLoadIdentity();
         gl.glFrustumf(-ratio, ratio, -1, 1, 1, 10);
!!!147074.java!!!	onSurfaceCreated(inout gl : GL10, inout config : EGLConfig) : void
        /*
         * By default, OpenGL enables features that improve quality
         * but reduce performance. One might want to tweak that
         * especially on software renderer.
         */
        gl.glDisable(GL10.GL_DITHER);

        /*
         * Some one-time OpenGL initialization can be made here
         * probably based on features of this particular context
         */
         gl.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT,
                 GL10.GL_FASTEST);

         if (mTranslucentBackground) {
             gl.glClearColor(0,0,0,0);
         } else {
             gl.glClearColor(1,1,1,1);
         }
         gl.glEnable(GL10.GL_CULL_FACE);
         gl.glShadeModel(GL10.GL_SMOOTH);
         gl.glEnable(GL10.GL_DEPTH_TEST);
!!!147202.java!!!	setAngle(inout angle : float) : void
    	this.mAngleX = previousMAngleX;
    	Log.i("CubeRenderer", "We should move it:"+mAngleX);
    	previousMAngleX = angle[0]-200;
    	this.mAngleX = previousMAngleY;
    	previousMAngleY = angle[0]+90;
    	
!!!147330.java!!!	finalize() : void
    	try {
			super.finalize();
		} catch (Throwable e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
