class ColladaHandler
!!!143874.java!!!	ColladaHandler()
		
!!!144002.java!!!	startDocument() : void
        super.startDocument();
!!!144130.java!!!	startElement(in uri : String, in localName : String, in name : String, inout atts : Attributes) : void
        super.startElement(uri, localName, name, atts);
        if (localName.equalsIgnoreCase("float_array") && atts.getValue("id").contains("position")){
        	inVertices = true;
        } else if (localName.equalsIgnoreCase("triangles") && vertices!=null){
        	inTriangles = true;
        } else if (localName.equalsIgnoreCase("p") && inTriangles)
        	inP = true;
!!!144258.java!!!	endElement(in uri : String, in localName : String, in name : String) : void
        super.endElement(uri, localName, name);
        
!!!144386.java!!!	characters(inout ch : char, in start : int, in length : int) : void
        super.characters(ch, start, length);
        String text = new String(ch, start, length);
        if (inVertices && vertices == null){
        	String[] temp = text.split(" ");
        	vertices = new float[temp.length];
        	for (int i=0; i< vertices.length; i++)
        		vertices[i] = Float.parseFloat(temp[i]);
        	
        	inVertices = false;
        	Log.d("Vertices: ", Arrays.toString(vertices));
        } else if(inP && text.length()>1 && indices == null) {
        	String[] temp = text.split(" ");
        	indices = new byte[temp.length/2+1];
        	for (int i=0; i<temp.length; i+=2){
            	indices[i/2] = Byte.parseByte(temp[i]);
        	}
        	Log.d("Indices: ", Arrays.toString(indices));
        	inP = false;
        	inTriangles = false;
        }
        
!!!144514.java!!!	parseFile(inout input : InputStream) : void
        try {
            
            SAXParserFactory spf = SAXParserFactory.newInstance();
            SAXParser sp = spf.newSAXParser();
            XMLReader xr = sp.getXMLReader();
            xr.setContentHandler(this);
            xr.parse(new InputSource(input));
           
        } catch (Exception e){
        	e.printStackTrace();
        }

!!!144642.java!!!	getVertices() : float
    	return vertices;
!!!144770.java!!!	getIndices() : byte
    	return indices;
